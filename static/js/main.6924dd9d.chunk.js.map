{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/services.jsx","components/Team.jsx","components/contact.jsx","components/about.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","src","alt","Header","data","title","paragraph","paragraph1","paragraph2","Services","map","d","i","icon","name","text","Team","img","job","config","Input","label","doChange","required","placeholder","onChange","initialState","inputs","value","email","phone","message","Contact","useState","setState","handleChange","e","target","prevState","validate","onSubmit","preventDefault","formData","FormData","Object","entries","key","console","log","append","axios","post","then","response","alert","catch","err","pattern","rows","address","rel","linkedIn","twitter","gitHub","About","Why","Why2","App","SmoothScroll","speed","speedAsDuration","siteData","setSiteData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6924dd9d.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='/'>\n            <img  src='img/logo.png' className='img-responsive logo' alt='MK Web'/>\n          </a>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#about' className='page-scroll'>\n                About\n              </a>\n            </li>\n            <li>\n              <a href='#services' className='page-scroll'>\n                Services\n              </a>\n            </li>\n            <li>\n              <a href='#team' className='page-scroll'>\n                Team\n              </a>\n            </li>\n            <li>\n              <a href='#contact' className='page-scroll'>\n                Contact\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","export const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <div className='overlay'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : 'Loading'}<br/>\n                {props.data ? props.data.paragraph1 : 'Loading'}<br/>\n                {props.data ? props.data.paragraph2 : 'Loading'}</p>\n                <a\n                  href='#contact'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Contact Us\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const Services = (props) => {\n  return (\n    <div id='services' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h2>What we do</h2>\n          <p>\n            Clean, modern designs - optimized for performance, search engines, and converting users to customers\n          </p>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-md-4'>\n                  {' '}\n                  <i className={d.icon}></i>\n                  <div className='service-desc'>\n                    <h3>{d.name}</h3>\n                    <p>{d.text}</p>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Team = (props) => {\n  return (\n    <div id='team' className='text-center'>\n      <div className='container'>\n        <div className='col-md-8 col-md-offset-2 section-title'>\n          <h2>Meet the Team</h2>\n          <p>\n            \n          </p>\n        </div>\n        <div id='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-md-3 col-sm-6 team'>\n                  <div className='thumbnail'>\n                    {' '}\n                    <img src={d.img} alt='...' className='team-img' />\n                    <div className='caption'>\n                      <h4>{d.name}</h4>\n                      <p>{d.job}</p>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport axios from 'axios'\n\n\nconst config = {\n  cors: 'https://kaleempasha.github.io/',\n  formUrl: 'https://docs.google.com/forms/u/0/d/e/1FAIpQLScWJXRW_IPaS8IcY8eFFR7sveRPEQ3b--Utf0kuUo1JcvqiUw/formResponse' \n};\n\nconst Input = ({ name, label, doChange, type='text'}) => {\n  return (\n    <input type={type} required placeholder={label} className='form-control' id={name} name={name} onChange={doChange} />\n  )\n}\n\nconst initialState = {\n  inputs: {\n    name: { id: 644362919, value: '' },\n    email: { id: 1502826422, value: '' },\n    phone: { id: 1679436207, value: '' },\n    message: { id: 1283806891, value: '' }\n  }\n}\nexport const Contact = (props) => {\n  const [{ inputs }, setState] = useState(initialState)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    inputs[name].value = value;\n    setState((prevState) => ({ ...prevState, inputs }))\n  }\n  const clearState = () => setState({ ...initialState })\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    for (let [key, value] of Object.entries(inputs)) {\n      console.log(key + ':' + value);\n      formData.append(`entry.${value.id}`, value.value);\n    }\n\n    axios.post(`${config.cors}${config.formUrl}`, formData)\n    .then((response) => {\n      console.log('response', response);\n      clearState();\n      alert(\"Submitted your message. Will contact you soon..!\");\n    })\n    .catch(err => {\n      console.log('err', err);\n    })\n  }\n  return (\n    <div>\n      <div id='contact'>\n        <div className='container'>\n          <div className='col-md-8'>\n            <div className='row'>\n              <div className='section-title'>\n                <h2>Get In Touch</h2>\n                <p>\n                  Please fill out the form below to send us an email and we will\n                  get back to you as soon as possible.\n                </p>\n              </div>\n              <form name='sentMessage' validate='true' onSubmit={handleSubmit}>\n                <div className='row'>\n                  <div className='col-md-12'>\n                    <div className='form-group'>\n                      <Input name=\"name\" label=\"Name\" doChange={handleChange} />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                </div>\n                <div className='row'>\n                  <div className='col-md-12'>\n                    <div className='form-group'>\n                      <Input name=\"email\" label=\"Email\" doChange={handleChange} type=\"email\" />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                </div>\n                <div className='row'>\n                  <div className='col-md-12'>\n                    <div className='form-group'>\n                      <input type=\"text\" pattern=\"^(?:(?:\\+|0{0,2})91(\\s*[\\-]\\s*)?|[0]?)?[789]\\d{9}$\" placeholder=\"Mobile Number\"\n                        name=\"phone\"  onChange={handleChange} className=\"form-control contact-field\" required />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                </div>\n                <div className='form-group'>\n                  <textarea\n                    name='message'\n                    id='message'\n                    className='form-control'\n                    rows='4'\n                    placeholder='Message'\n                    required\n                    onChange={handleChange}\n                  ></textarea>\n                  <p className='help-block text-danger'></p>\n                </div>\n                <div id='success'></div>\n                <button type='submit' className='btn btn-custom btn-lg'>\n                  Send Message\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className='col-md-3 col-md-offset-1 contact-info'>\n            <div className='contact-item'>\n              <h3>Contact Info</h3>\n              <p>\n                <span>\n                  <i className='fa fa-map-marker'></i> Address\n                </span>\n                {props.data ? props.data.address : 'loading'}\n              </p>\n            </div>\n            {/* <div className='contact-item'>\n              <p>\n                <span>\n                  <i className='fa fa-phone'></i> Phone\n                </span>{' '}\n                {props.data ? props.data.phone : 'loading'}\n              </p>\n            </div> */}\n            <div className='contact-item'>\n              <p>\n                <span>\n                  <i className='fa fa-envelope-o'></i> Email\n                </span>{' '}\n                {props.data ? props.data.email : 'loading'}\n              </p>\n            </div>\n          </div>\n          <div className='col-md-12'>\n            <div className='row'>\n              <div className='social'>\n                <ul>\n                  <li>\n                    <a target='_blank' rel='noreferrer' href={props.data ? props.data.linkedIn : '/'}>\n                      <i className='fa fa-linkedin'></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a target='_blank' rel='noreferrer' href={props.data ? props.data.twitter : '/'}>\n                      <i className='fa fa-twitter'></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a target='_blank' rel='noreferrer' href={props.data ? props.data.gitHub : '/'}>\n                      <i className='fa fa-github'></i>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <p>\n            &copy; 2021. Design by{' '}\n            <a href={props.data ? 'mailto:' + props.data.email : '/'} rel='nofollow'>\n              MK Web\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const About = (props) => {\n  return (\n    <div id=\"about\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-6\">\n            {\" \"}\n            <img src=\"img/about.png\" className=\"img-responsive\" alt=\"\" />{\" \"}\n          </div>\n          <div className=\"col-xs-12 col-md-6\">\n            <div className=\"about-text\">\n              <h2>About</h2>\n              <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\n              <h3>Why Choose Us?</h3>\n              <div className=\"list-style\">\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Why.map((d, i) => (\n                          <li key={`${d}-${i}`}>{d}</li>\n                        ))\n                      : \"loading\"}\n                  </ul>\n                </div>\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Why2.map((d, i) => (\n                          <li key={`${d}-${i}`}> {d}</li>\n                        ))\n                      : \"loading\"}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { Navigation } from \"./components/navigation\";\nimport { Header } from \"./components/header\";\nimport { Services } from \"./components/services\";\nimport { Team } from \"./components/Team\";\nimport { Contact } from \"./components/contact\";\nimport { About } from \"./components/about\"\nimport JsonData from \"./data/data.json\";\nimport SmoothScroll from \"smooth-scroll\";\nimport \"./App.css\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n  const [siteData, setSiteData] = useState({});\n  useEffect(() => {\n    setSiteData(JsonData);\n  }, []);\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={siteData.Header} />\n      <About data={siteData.About} />\n      <Services data={siteData.Services} />\n      <Team data={siteData.Team} />\n      <Contact data={siteData.Contact} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}